var waddup =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * convenience function, returning pure map\n *\n * @return {{}}\n */\nvar createBareObject = function createBareObject() {\n    return Object.create(null);\n};\n\nvar subscriptions = createBareObject(),\n    ids = createBareObject(),\n    uid = -1;\n\n/**\n * empty function used for defaults\n */\nvar noop = function noop() {};\n\n/**\n * get all subscriptions currently in object\n *\n * @return {object}\n */\nvar getSubscriptions = function getSubscriptions() {\n    return subscriptions;\n};\n\n/**\n * based on object passed, get its type in lowercase string format\n *\n * @param {any} object\n * @return {string}\n */\nvar getType = function getType(object) {\n    return Object.prototype.toString.call(object).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n};\n\n/**\n * unsubscribe ID from the topic it was originally allocated to\n *\n * @param {string} id\n */\nvar performUnsubscribe = function performUnsubscribe(id) {\n    var _ids$id = ids[id];\n    var subscription = _ids$id.subscription;\n    var topic = _ids$id.topic;\n\n    var subscribers = subscriptions[topic];\n    var indexOfSubscription = subscribers.indexOf(subscription);\n\n    if (indexOfSubscription !== -1) {\n        subscriptions[topic] = [].concat(_toConsumableArray(subscribers.slice(0, indexOfSubscription)), _toConsumableArray(subscribers.slice(indexOfSubscription + 1)));\n\n        delete ids[id];\n\n        if (!subscriptions[topic].length) {\n            delete subscriptions[topic];\n        }\n    }\n};\n\n/**\n * add function to array of subscriptions and return the id of the subscription\n *\n * @param {string} topic\n * @param {function} topicFunction\n * @param {object} options={}\n * @return {number}\n */\nvar performSubscribe = function performSubscribe(topic) {\n    var topicFunction = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n    var options = arguments[2];\n\n    var id = ++uid;\n    var subscribers = subscriptions[topic] || [];\n\n    var _options$isPublishedO = options.isPublishedOnce;\n    var isPublishedOnce = _options$isPublishedO === undefined ? false : _options$isPublishedO;\n\n\n    var callTopicFunction = function callTopicFunction(topicCalled, data) {\n        topicFunction(topicCalled, data);\n    };\n    var subscription = !isPublishedOnce ? callTopicFunction : function (topicCalled, data) {\n        callTopicFunction(topicCalled, data);\n\n        performUnsubscribe(id);\n    };\n\n    ids[id] = {\n        subscription: subscription,\n        topic: topic\n    };\n\n    subscriptions[topic] = [].concat(_toConsumableArray(subscribers), [subscription]);\n\n    return id;\n};\n\n/**\n * trigger call of all functions subscribed to topic, passing the data to it\n *\n * @param {string} topic\n * @param {any} data\n */\nvar publish = function publish(topic, data) {\n    if (!topic) {\n        throw new Error('You must provide a topic to publish.');\n    }\n\n    var subscriptionsToPublish = subscriptions[topic] || [];\n\n    subscriptionsToPublish.forEach(function (subscription) {\n        subscription(topic, data);\n    });\n};\n\n/**\n * subscribe fn to topic(s) based on options passed\n *\n * @param {string|array<string>} topics\n * @param {function} fn\n * @param {object} options\n * @return {number|array<number>}\n */\nvar subscribe = function subscribe(topics, fn) {\n    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var topicsType = getType(topics);\n\n    switch (topicsType) {\n        case 'string':\n            return performSubscribe(topics, fn, options);\n\n        case 'array':\n            return topics.map(function (topic) {\n                return performSubscribe(topic, fn, options);\n            });\n\n        default:\n            throw new Error('You must pass either the name of the topic or an array of topics to subscribe to.');\n    }\n};\n\n/**\n * unsubscribe id(s) from future publishes\n *\n * @param {string|array<string>} ids\n */\nvar unsubscribe = function unsubscribe(ids) {\n    var idsType = getType(ids);\n\n    switch (idsType) {\n        case 'number':\n            performUnsubscribe(ids);\n            break;\n\n        case 'array':\n            ids.forEach(function (id) {\n                performUnsubscribe(id);\n            });\n\n            break;\n\n        default:\n            throw new Error('You must pass either the ID or an array of IDs to unsubscribe from.');\n    }\n};\n\nexports.getSubscriptions = getSubscriptions;\nexports.publish = publish;\nexports.subscribe = subscribe;\nexports.unsubscribe = unsubscribe;\nexports.default = {\n    getSubscriptions: getSubscriptions,\n    publish: publish,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaW5kZXguanM/MWZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGNvbnZlbmllbmNlIGZ1bmN0aW9uLCByZXR1cm5pbmcgcHVyZSBtYXBcbiAqXG4gKiBAcmV0dXJuIHt7fX1cbiAqL1xuY29uc3QgY3JlYXRlQmFyZU9iamVjdCA9ICgpID0+IHtcbiAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZShudWxsKTtcbn07XG5cbmxldCBzdWJzY3JpcHRpb25zID0gY3JlYXRlQmFyZU9iamVjdCgpLFxuICAgIGlkcyA9IGNyZWF0ZUJhcmVPYmplY3QoKSxcbiAgICB1aWQgPSAtMTtcblxuLyoqXG4gKiBlbXB0eSBmdW5jdGlvbiB1c2VkIGZvciBkZWZhdWx0c1xuICovXG5jb25zdCBub29wID0gKCkgPT4ge307XG5cbi8qKlxuICogZ2V0IGFsbCBzdWJzY3JpcHRpb25zIGN1cnJlbnRseSBpbiBvYmplY3RcbiAqXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmNvbnN0IGdldFN1YnNjcmlwdGlvbnMgPSAoKSA9PiB7XG4gIHJldHVybiBzdWJzY3JpcHRpb25zO1xufTtcblxuLyoqXG4gKiBiYXNlZCBvbiBvYmplY3QgcGFzc2VkLCBnZXQgaXRzIHR5cGUgaW4gbG93ZXJjYXNlIHN0cmluZyBmb3JtYXRcbiAqXG4gKiBAcGFyYW0ge2FueX0gb2JqZWN0XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmNvbnN0IGdldFR5cGUgPSAob2JqZWN0KSA9PiB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmplY3QpLnJlcGxhY2UoL15cXFtvYmplY3QgKC4rKVxcXSQvLCAnJDEnKS50b0xvd2VyQ2FzZSgpO1xufTtcblxuLyoqXG4gKiB1bnN1YnNjcmliZSBJRCBmcm9tIHRoZSB0b3BpYyBpdCB3YXMgb3JpZ2luYWxseSBhbGxvY2F0ZWQgdG9cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gaWRcbiAqL1xuY29uc3QgcGVyZm9ybVVuc3Vic2NyaWJlID0gKGlkKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBzdWJzY3JpcHRpb24sXG4gICAgICAgIHRvcGljXG4gICAgfSA9IGlkc1tpZF07XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBzdWJzY3JpcHRpb25zW3RvcGljXTtcbiAgICBjb25zdCBpbmRleE9mU3Vic2NyaXB0aW9uID0gc3Vic2NyaWJlcnMuaW5kZXhPZihzdWJzY3JpcHRpb24pO1xuXG4gICAgaWYgKGluZGV4T2ZTdWJzY3JpcHRpb24gIT09IC0xKSB7XG4gICAgICAgIHN1YnNjcmlwdGlvbnNbdG9waWNdID0gW1xuICAgICAgICAgICAgLi4uc3Vic2NyaWJlcnMuc2xpY2UoMCwgaW5kZXhPZlN1YnNjcmlwdGlvbiksXG4gICAgICAgICAgICAuLi5zdWJzY3JpYmVycy5zbGljZShpbmRleE9mU3Vic2NyaXB0aW9uICsgMSlcbiAgICAgICAgXTtcblxuICAgICAgICBkZWxldGUgaWRzW2lkXTtcblxuICAgICAgICBpZiAoIXN1YnNjcmlwdGlvbnNbdG9waWNdLmxlbmd0aCkge1xuICAgICAgICAgICAgZGVsZXRlIHN1YnNjcmlwdGlvbnNbdG9waWNdO1xuICAgICAgICB9XG4gICAgfVxufTtcblxuLyoqXG4gKiBhZGQgZnVuY3Rpb24gdG8gYXJyYXkgb2Ygc3Vic2NyaXB0aW9ucyBhbmQgcmV0dXJuIHRoZSBpZCBvZiB0aGUgc3Vic2NyaXB0aW9uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHRvcGljXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSB0b3BpY0Z1bmN0aW9uXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucz17fVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5jb25zdCBwZXJmb3JtU3Vic2NyaWJlID0gKHRvcGljLCB0b3BpY0Z1bmN0aW9uID0gbm9vcCwgb3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IGlkID0gKyt1aWQ7XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBzdWJzY3JpcHRpb25zW3RvcGljXSB8fCBbXTtcblxuICAgIGNvbnN0IHtcbiAgICAgICAgaXNQdWJsaXNoZWRPbmNlID0gZmFsc2VcbiAgICB9ID0gb3B0aW9ucztcblxuICAgIGNvbnN0IGNhbGxUb3BpY0Z1bmN0aW9uID0gKHRvcGljQ2FsbGVkLCBkYXRhKSA9PiB7XG4gICAgICAgIHRvcGljRnVuY3Rpb24odG9waWNDYWxsZWQsIGRhdGEpO1xuICAgIH07XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gIWlzUHVibGlzaGVkT25jZSA/IGNhbGxUb3BpY0Z1bmN0aW9uIDogKHRvcGljQ2FsbGVkLCBkYXRhKSA9PiB7XG4gICAgICAgIGNhbGxUb3BpY0Z1bmN0aW9uKHRvcGljQ2FsbGVkLCBkYXRhKTtcblxuICAgICAgICBwZXJmb3JtVW5zdWJzY3JpYmUoaWQpO1xuICAgIH07XG5cbiAgICBpZHNbaWRdID0ge1xuICAgICAgICBzdWJzY3JpcHRpb24sXG4gICAgICAgIHRvcGljXG4gICAgfTtcblxuICAgIHN1YnNjcmlwdGlvbnNbdG9waWNdID0gW1xuICAgICAgICAuLi5zdWJzY3JpYmVycyxcbiAgICAgICAgc3Vic2NyaXB0aW9uXG4gICAgXTtcblxuICAgIHJldHVybiBpZDtcbn07XG5cblxuLyoqXG4gKiB0cmlnZ2VyIGNhbGwgb2YgYWxsIGZ1bmN0aW9ucyBzdWJzY3JpYmVkIHRvIHRvcGljLCBwYXNzaW5nIHRoZSBkYXRhIHRvIGl0XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHRvcGljXG4gKiBAcGFyYW0ge2FueX0gZGF0YVxuICovXG5jb25zdCBwdWJsaXNoID0gKHRvcGljLCBkYXRhKSA9PiB7XG4gICAgaWYgKCF0b3BpYykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtdXN0IHByb3ZpZGUgYSB0b3BpYyB0byBwdWJsaXNoLicpO1xuICAgIH1cblxuICAgIGxldCBzdWJzY3JpcHRpb25zVG9QdWJsaXNoID0gc3Vic2NyaXB0aW9uc1t0b3BpY10gfHwgW107XG5cbiAgICBzdWJzY3JpcHRpb25zVG9QdWJsaXNoLmZvckVhY2goKHN1YnNjcmlwdGlvbikgPT4ge1xuICAgICAgICBzdWJzY3JpcHRpb24odG9waWMsIGRhdGEpO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiBzdWJzY3JpYmUgZm4gdG8gdG9waWMocykgYmFzZWQgb24gb3B0aW9ucyBwYXNzZWRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ3xhcnJheTxzdHJpbmc+fSB0b3BpY3NcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7bnVtYmVyfGFycmF5PG51bWJlcj59XG4gKi9cbmNvbnN0IHN1YnNjcmliZSA9ICh0b3BpY3MsIGZuLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCB0b3BpY3NUeXBlID0gZ2V0VHlwZSh0b3BpY3MpO1xuXG4gICAgc3dpdGNoICh0b3BpY3NUeXBlKSB7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICByZXR1cm4gcGVyZm9ybVN1YnNjcmliZSh0b3BpY3MsIGZuLCBvcHRpb25zKTtcblxuICAgICAgICBjYXNlICdhcnJheSc6XG4gICAgICAgICAgICByZXR1cm4gdG9waWNzLm1hcCgodG9waWMpID0+IHtcbiAgICAgICAgICAgICAgIHJldHVybiBwZXJmb3JtU3Vic2NyaWJlKHRvcGljLCBmbiwgb3B0aW9ucyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbXVzdCBwYXNzIGVpdGhlciB0aGUgbmFtZSBvZiB0aGUgdG9waWMgb3IgYW4gYXJyYXkgb2YgdG9waWNzIHRvIHN1YnNjcmliZSB0by4nKTtcbiAgICB9XG59O1xuXG4vKipcbiAqIHVuc3Vic2NyaWJlIGlkKHMpIGZyb20gZnV0dXJlIHB1Ymxpc2hlc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfGFycmF5PHN0cmluZz59IGlkc1xuICovXG5jb25zdCB1bnN1YnNjcmliZSA9IChpZHMpID0+IHtcbiAgICBjb25zdCBpZHNUeXBlID0gZ2V0VHlwZShpZHMpO1xuXG4gICAgc3dpdGNoIChpZHNUeXBlKSB7XG4gICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgICBwZXJmb3JtVW5zdWJzY3JpYmUoaWRzKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2FycmF5JzpcbiAgICAgICAgICAgIGlkcy5mb3JFYWNoKChpZCkgPT4ge1xuICAgICAgICAgICAgICAgcGVyZm9ybVVuc3Vic2NyaWJlKGlkKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbXVzdCBwYXNzIGVpdGhlciB0aGUgSUQgb3IgYW4gYXJyYXkgb2YgSURzIHRvIHVuc3Vic2NyaWJlIGZyb20uJyk7XG4gICAgfVxufTtcblxuZXhwb3J0IHtnZXRTdWJzY3JpcHRpb25zfTtcbmV4cG9ydCB7cHVibGlzaH07XG5leHBvcnQge3N1YnNjcmliZX07XG5leHBvcnQge3Vuc3Vic2NyaWJlfTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGdldFN1YnNjcmlwdGlvbnMsXG4gICAgcHVibGlzaCxcbiAgICBzdWJzY3JpYmUsXG4gICAgdW5zdWJzY3JpYmVcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvaW5kZXguanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBOzs7O0FBTUE7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQVNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBSEE7QUFBQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBU0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQVlBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFiQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ]);